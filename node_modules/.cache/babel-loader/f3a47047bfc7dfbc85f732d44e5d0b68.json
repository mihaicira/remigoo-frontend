{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport MainPage from \"./Components/MainPage/MainPage\";\nimport PageNotFound from \"./Components/PageNotFound/PageNotFound\";\nimport LoginPage from \"./Components/PageLoginSignup/LoginPage\";\nimport SignupPage from \"./Components/PageLoginSignup/SignupPage\";\nimport PanelPage from \"./Components/PagePanel/PanelPage\";\nimport BookTicketPage from \"./Components/PageBookTicket/BookTicketPage\";\nimport ProfilePage from \"./Components/PageProfile/ProfilePage\";\nimport { useAccountDataUpdate } from \"./Components/AccountContext/AccountProvider\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const AccountDataUpdate = useAccountDataUpdate();\n  useEffect(async () => {\n    // let data;\n    let storageData = JSON.parse(localStorage.getItem(\"loginStatus\"));\n    let accountData, response_data;\n    console.log(`userid: ${storageData.userData.userId} | token: ${storageData.userData.token}`);\n\n    try {\n      if (storageData.isLoggedIn) {\n        const response = await fetch(`http://localhost:3000/?type=validate-token&id=${storageData.userData.userId}&auth_token=${storageData.userData.token}`);\n        response_data = await response.json();\n\n        if (!response_data.error) {\n          accountData = {\n            isLoggedIn: storageData.isLoggedIn,\n            userData: storageData.userData\n          };\n          console.log(\"Successfully logged in!\");\n        }\n      }\n    } catch {\n      if (!storageData.isLoggedIn) {\n        accountData = {\n          isLoggedIn: false\n        };\n        console.log(\"User is not logged in. (CLIENT reject)\");\n      }\n    }\n\n    AccountDataUpdate(accountData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(SignupPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/panel\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(PanelPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/account\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/book/:movieId\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(BookTicketPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/404\",\n        element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"GGyZAuKfPaOF9MjkzFE/oA2mLCY=\", false, function () {\n  return [useAccountDataUpdate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react/remigoo/src/App.js"],"names":["Routes","Route","Navbar","MainPage","PageNotFound","LoginPage","SignupPage","PanelPage","BookTicketPage","ProfilePage","useAccountDataUpdate","useEffect","App","AccountDataUpdate","storageData","JSON","parse","localStorage","getItem","accountData","response_data","console","log","userData","userId","token","isLoggedIn","response","fetch","json","error"],"mappings":"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","sourcesContent":["import { Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport MainPage from \"./Components/MainPage/MainPage\";\nimport PageNotFound from \"./Components/PageNotFound/PageNotFound\";\nimport LoginPage from \"./Components/PageLoginSignup/LoginPage\";\nimport SignupPage from \"./Components/PageLoginSignup/SignupPage\";\nimport PanelPage from \"./Components/PagePanel/PanelPage\";\nimport BookTicketPage from \"./Components/PageBookTicket/BookTicketPage\";\nimport ProfilePage from \"./Components/PageProfile/ProfilePage\";\nimport {useAccountDataUpdate} from \"./Components/AccountContext/AccountProvider\";\nimport {useEffect} from 'react'\n\nfunction App() {\n\n    const AccountDataUpdate = useAccountDataUpdate()\n\n    useEffect(async ()=>{\n        // let data;\n        let storageData = JSON.parse(localStorage.getItem(\"loginStatus\"))\n        let accountData,response_data;\n\n        console.log(`userid: ${storageData.userData.userId} | token: ${storageData.userData.token}`)\n\n        try{\n            if(storageData.isLoggedIn){\n                const response = await fetch(`http://localhost:3000/?type=validate-token&id=${storageData.userData.userId}&auth_token=${storageData.userData.token}`)\n                response_data =  await response.json()\n                if(!response_data.error){\n                    accountData = {\n                        isLoggedIn:storageData.isLoggedIn,\n                        userData: storageData.userData\n                    }\n                    console.log(\"Successfully logged in!\")\n                }\n            }\n        }\n        catch{\n            if(!storageData.isLoggedIn){\n                accountData = {\n                    isLoggedIn: false\n                }\n                console.log(\"User is not logged in. (CLIENT reject)\")\n            }\n        }\n\n\n\n\n        AccountDataUpdate(accountData)\n    },[])\n\n  return (<>\n             <Navbar/>\n             <Routes>\n                <Route path=\"/\" exact element={<MainPage/>}/>\n                <Route path=\"/login\" exact element={<LoginPage/>}/>\n                <Route path=\"/signup\" exact element={<SignupPage/>}/>\n                <Route path=\"/panel\" exact element={<PanelPage/>}/>\n                <Route path=\"/account\" exact element={<ProfilePage/>}/>\n                <Route path=\"/book/:movieId\" exact element={<BookTicketPage/>}/>\n                <Route path=\"/404\" element={<PageNotFound/>}/>\n             </Routes>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}