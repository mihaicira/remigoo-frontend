{"ast":null,"code":"import _regeneratorRuntime from\"D:/react/remigoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react/remigoo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var popUpError=function popUpError(){document.getElementById(\"account-error\").style.transform=\"scale(1.2)\";setTimeout(function(){document.getElementById(\"account-error\").style.transform=\"scale(1)\";},500);};export var validateEmail=function validateEmail(email){var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(String(email).toLowerCase());};export function LoginRequest(_x){return _LoginRequest.apply(this,arguments);}function _LoginRequest(){_LoginRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(obj){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://    email,password\nconsole.log(\"http://localhost:3000/login?email_address=\".concat(obj.email,\"&password=\").concat(obj.password));_context.next=3;return fetch(\"http://localhost:3000/login?email_address=\".concat(obj.email,\"&password=\").concat(obj.password));case 3:response=_context.sent;_context.next=6;return response.json();case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},_callee);}));return _LoginRequest.apply(this,arguments);}export var beautifyMinutes=function beautifyMinutes(min){var time=Math.floor(min/60)+\"h\";if(min%60!==0)time+=' '+min%60+'m';return time;};export var isDateInPast=function isDateInPast(date){var splittedValue=date.split('-');var selectedDate=new Date(splittedValue[0],splittedValue[1]-1,splittedValue[2]);var now=new Date();var today=new Date(now.getFullYear(),now.getMonth(),now.getDate());return selectedDate<today;};export var monthNumberToString=function monthNumberToString(number){var months={1:\"January\",2:\"February\",3:\"March\",4:\"April\",5:\"May\",6:\"June\",7:\"July\",8:\"August\",9:\"September\",10:\"October\",11:\"November\",12:\"December\"};return months[number];};","map":{"version":3,"sources":["D:/react/remigoo/src/utils/utils.js"],"names":["popUpError","document","getElementById","style","transform","setTimeout","validateEmail","email","re","test","String","toLowerCase","LoginRequest","obj","console","log","password","fetch","response","json","beautifyMinutes","min","time","Math","floor","isDateInPast","date","splittedValue","split","selectedDate","Date","now","today","getFullYear","getMonth","getDate","monthNumberToString","number","months"],"mappings":"2QAAA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAK,CAC3BC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,SAA/C,CAAyD,YAAzD,CACAC,UAAU,CAAC,UAAI,CACXJ,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,SAA/C,CAAyD,UAAzD,CACH,CAFS,CAER,GAFQ,CAAV,CAGH,CALM,CAOP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAU,CACnC,GAAMC,CAAAA,EAAE,CAAG,uJAAX,CACA,MAAOA,CAAAA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP,CACH,CAHM,CAKP,eAAsBC,CAAAA,YAAtB,iD,+FAAO,iBAA4BC,GAA5B,+HACH;AACAC,OAAO,CAACC,GAAR,qDAAyDF,GAAG,CAACN,KAA7D,sBAA+EM,GAAG,CAACG,QAAnF,GAFG,sBAGoBC,CAAAA,KAAK,qDAA8CJ,GAAG,CAACN,KAAlD,sBAAoEM,GAAG,CAACG,QAAxE,EAHzB,QAGGE,QAHH,qCAIUA,CAAAA,QAAQ,CAACC,IAAT,EAJV,6G,+CAQP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAQ,CACnC,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAAC,EAAf,EAAqB,GAAhC,CACA,GAAGA,GAAG,CAAC,EAAJ,GAAW,CAAd,CACIC,IAAI,EAAI,IAAKD,GAAG,CAAC,EAAT,CAAc,GAAtB,CACJ,MAAOC,CAAAA,IAAP,CACH,CALM,CAOP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAQ,CAChC,GAAMC,CAAAA,aAAa,CAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAtB,CACA,GAAMC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,IAAJ,CAASH,aAAa,CAAC,CAAD,CAAtB,CAA0BA,aAAa,CAAC,CAAD,CAAb,CAAiB,CAA3C,CAA6CA,aAAa,CAAC,CAAD,CAA1D,CAArB,CACA,GAAMI,CAAAA,GAAG,CAAG,GAAID,CAAAA,IAAJ,EAAZ,CACA,GAAME,CAAAA,KAAK,CAAG,GAAIF,CAAAA,IAAJ,CAASC,GAAG,CAACE,WAAJ,EAAT,CAA2BF,GAAG,CAACG,QAAJ,EAA3B,CAA0CH,GAAG,CAACI,OAAJ,EAA1C,CAAd,CACA,MAAON,CAAAA,YAAY,CAAGG,KAAtB,CACH,CANM,CAQP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAW,CAC1C,GAAMC,CAAAA,MAAM,CAAG,CACX,EAAE,SADS,CAEX,EAAE,UAFS,CAGX,EAAE,OAHS,CAIX,EAAE,OAJS,CAKX,EAAE,KALS,CAMX,EAAE,MANS,CAOX,EAAE,MAPS,CAQX,EAAE,QARS,CASX,EAAE,WATS,CAUX,GAAG,SAVQ,CAWX,GAAG,UAXQ,CAYX,GAAG,UAZQ,CAAf,CAcA,MAAOA,CAAAA,MAAM,CAACD,MAAD,CAAb,CACH,CAhBM","sourcesContent":["export const popUpError = () =>{\r\n    document.getElementById(\"account-error\").style.transform=\"scale(1.2)\";\r\n    setTimeout(()=>{\r\n        document.getElementById(\"account-error\").style.transform=\"scale(1)\";\r\n    },500)\r\n}\r\n\r\nexport const validateEmail = (email)=> {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport async function LoginRequest(obj){\r\n    //    email,password\r\n    console.log(`http://localhost:3000/login?email_address=${obj.email}&password=${obj.password}`)\r\n    const response = await fetch(`http://localhost:3000/login?email_address=${obj.email}&password=${obj.password}`)\r\n    return await response.json()\r\n\r\n}\r\n\r\nexport const beautifyMinutes = (min) =>{\r\n    let time = Math.floor(min/60) + \"h\"\r\n    if(min%60 !== 0)\r\n        time += ' '+ min%60 + 'm'\r\n    return time\r\n}\r\n\r\nexport const isDateInPast = (date)=>{\r\n    const splittedValue = date.split('-')\r\n    const selectedDate = new Date(splittedValue[0],splittedValue[1]-1,splittedValue[2])\r\n    const now = new Date()\r\n    const today = new Date(now.getFullYear(),now.getMonth(),now.getDate())\r\n    return selectedDate < today\r\n}\r\n\r\nexport const monthNumberToString = (number) =>{\r\n    const months = {\r\n        1:\"January\",\r\n        2:\"February\",\r\n        3:\"March\",\r\n        4:\"April\",\r\n        5:\"May\",\r\n        6:\"June\",\r\n        7:\"July\",\r\n        8:\"August\",\r\n        9:\"September\",\r\n        10:\"October\",\r\n        11:\"November\",\r\n        12:\"December\",\r\n    }\r\n    return months[number];\r\n}"]},"metadata":{},"sourceType":"module"}