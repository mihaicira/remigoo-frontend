{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageProfile\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./ProfilePage.css\";\nimport HeaderText from \"../HeaderTextt/HeaderText\";\nimport TicketInfo from \"./TicketInfo/TicketInfo\";\nimport AccountDataSection from \"./AccountDataSection/AccountDataSection\";\nimport { useAccountData, useAccountDataUpdate } from \"../AccountContext/AccountProvider\";\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePage(props) {\n  _s();\n\n  const AccountDataUpdate = useAccountDataUpdate();\n  const AccountData = useAccountData();\n  const navigate = useNavigate();\n  const [userData, setUserdata] = useState(null);\n\n  async function GetUserRequest(email) {\n    const response = await fetch(`http://localhost:3000/?type=getuser&email_address=${email}`);\n    return await response.json();\n  }\n\n  const refreshUser = async storageData => {\n    const response = await GetUserRequest(storageData.userData.userEmail);\n    if (response.error) navigate('/');\n    console.log(response.content);\n    setUserdata(response.content);\n  };\n\n  useEffect(async () => {\n    const storageData = JSON.parse(localStorage.getItem(\"loginStatus\"));\n    if (!storageData.isLoggedIn) navigate('/'); //getuser\n\n    refreshUser(storageData);\n  }, []);\n  useEffect(() => {\n    console.log(userData);\n  }, userData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [AccountData.isLoggedIn && /*#__PURE__*/_jsxDEV(HeaderText, {\n      text: `Hello, ${AccountData.userData.userName}!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(TicketInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderText, {\n      text: `Account data`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccountDataSection, {\n      name: userData ? userData.name : null,\n      email: userData ? userData.email : null,\n      id: userData ? userData.id : null,\n      refreshUser: refreshUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfilePage, \"/FNrdmgpLtnsno+kbWYI6PRvhEE=\", false, function () {\n  return [useAccountDataUpdate, useAccountData, useNavigate];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageProfile/ProfilePage.js"],"names":["HeaderText","TicketInfo","AccountDataSection","useAccountData","useAccountDataUpdate","useEffect","useState","useNavigate","ProfilePage","props","AccountDataUpdate","AccountData","navigate","userData","setUserdata","GetUserRequest","email","response","fetch","json","refreshUser","storageData","userEmail","error","console","log","content","JSON","parse","localStorage","getItem","isLoggedIn","userName","name","id"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,SAAQC,cAAR,EAAwBC,oBAAxB,QAAmD,mCAAnD;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAMC,iBAAiB,GAAGN,oBAAoB,EAA9C;AACA,QAAMO,WAAW,GAAGR,cAAc,EAAlC;AACA,QAAMS,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;;AAEA,iBAAeS,cAAf,CAA8BC,KAA9B,EAAoC;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDF,KAAM,EAA5D,CAA5B;AACA,WAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACH;;AAED,QAAMC,WAAW,GAAG,MAAOC,WAAP,IAAsB;AACtC,UAAMJ,QAAQ,GAAG,MAAMF,cAAc,CAACM,WAAW,CAACR,QAAZ,CAAqBS,SAAtB,CAArC;AAEA,QAAGL,QAAQ,CAACM,KAAZ,EACIX,QAAQ,CAAC,GAAD,CAAR;AAEJY,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,OAArB;AACAZ,IAAAA,WAAW,CAACG,QAAQ,CAACS,OAAV,CAAX;AACH,GARD;;AAUArB,EAAAA,SAAS,CAAC,YAAU;AAChB,UAAMgB,WAAW,GAAGM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,QAAG,CAACT,WAAW,CAACU,UAAhB,EACInB,QAAQ,CAAC,GAAD,CAAR,CAHY,CAKhB;;AACAQ,IAAAA,WAAW,CAACC,WAAD,CAAX;AAEH,GARQ,EAQP,EARO,CAAT;AAUAhB,EAAAA,SAAS,CAAC,MAAI;AACVmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACH,GAFQ,EAEPA,QAFO,CAAT;AAIA,sBACI;AAAA,eACKF,WAAW,CAACoB,UAAZ,iBAA0B,QAAC,UAAD;AAAY,MAAA,IAAI,EAAG,UAASpB,WAAW,CAACE,QAAZ,CAAqBmB,QAAS;AAA1D;AAAA;AAAA;AAAA;AAAA,YAD/B,eAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAG;AAAnB;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAEnB,QAAQ,GAAGA,QAAQ,CAACoB,IAAZ,GAAmB,IAArD;AAA2D,MAAA,KAAK,EAAEpB,QAAQ,GAAGA,QAAQ,CAACG,KAAZ,GAAoB,IAA9F;AAAoG,MAAA,EAAE,EAAEH,QAAQ,GAAGA,QAAQ,CAACqB,EAAZ,GAAiB,IAAjI;AAAuI,MAAA,WAAW,EAAEd;AAApJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADJ;AAUH;;GA9CQZ,W;UAEqBJ,oB,EACND,c,EACHI,W;;;KAJZC,W;AAgDT,eAAeA,WAAf","sourcesContent":["import \"./ProfilePage.css\";\r\nimport HeaderText from \"../HeaderTextt/HeaderText\";\r\nimport TicketInfo from \"./TicketInfo/TicketInfo\";\r\nimport AccountDataSection from \"./AccountDataSection/AccountDataSection\";\r\nimport {useAccountData, useAccountDataUpdate} from \"../AccountContext/AccountProvider\";\r\nimport {useEffect,useState} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction ProfilePage(props) {\r\n\r\n    const AccountDataUpdate = useAccountDataUpdate()\r\n    const AccountData = useAccountData()\r\n    const navigate = useNavigate();\r\n    const [userData,setUserdata] = useState(null)\r\n\r\n    async function GetUserRequest(email){\r\n        const response = await fetch(`http://localhost:3000/?type=getuser&email_address=${email}`)\r\n        return await response.json()\r\n    }\r\n\r\n    const refreshUser = async (storageData) =>{\r\n        const response = await GetUserRequest(storageData.userData.userEmail)\r\n\r\n        if(response.error)\r\n            navigate('/')\r\n\r\n        console.log(response.content)\r\n        setUserdata(response.content)\r\n    }\r\n\r\n    useEffect(async ()=>{\r\n        const storageData = JSON.parse(localStorage.getItem(\"loginStatus\"))\r\n        if(!storageData.isLoggedIn)\r\n            navigate('/')\r\n\r\n        //getuser\r\n        refreshUser(storageData)\r\n\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(userData)\r\n    },userData)\r\n\r\n    return (\r\n        <>\r\n            {AccountData.isLoggedIn && <HeaderText text={`Hello, ${AccountData.userData.userName}!`}/>}\r\n\r\n            <TicketInfo/>\r\n\r\n            <HeaderText text={`Account data`}/>\r\n            <AccountDataSection name={userData ? userData.name : null} email={userData ? userData.email : null} id={userData ? userData.id : null} refreshUser={refreshUser}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}