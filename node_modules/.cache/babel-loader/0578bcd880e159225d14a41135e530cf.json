{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageProfile\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./ProfilePage.css\";\nimport HeaderText from \"../HeaderText/HeaderText\";\nimport TicketInfo from \"./TicketInfo/TicketInfo\";\nimport AccountDataSection from \"./AccountDataSection/AccountDataSection\";\nimport { useAccountData, useAccountDataUpdate } from \"../AccountContext/AccountProvider\";\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePage(props) {\n  _s();\n\n  const AccountDataUpdate = useAccountDataUpdate();\n  const AccountData = useAccountData();\n  const navigate = useNavigate();\n  const [userData, setUserdata] = useState({});\n  const [ageCategory, setAgeCategory] = useState(null);\n\n  async function GetUserRequest(email) {\n    const response = await fetch(`http://localhost:3000/getuser?email_address=${email}`);\n    const data = await response.json();\n    setUserdata(data.content);\n    setAgeCategory(data.content.userAgeCategory);\n    return data;\n  }\n\n  const refreshUser = async email => {\n    const response = await GetUserRequest(email);\n    if (response.error) navigate('/');\n    setUserdata(response.content);\n    console.log(\"User refreshed. Response:\", response.content);\n  };\n\n  useEffect(() => {\n    async function effectFunction() {\n      const storageData = JSON.parse(localStorage.getItem(\"loginStatus\"));\n\n      if (!storageData.isLoggedIn) {\n        navigate('/');\n        return;\n      } //getuser\n\n\n      refreshUser(storageData.userData.userEmail);\n    }\n\n    effectFunction();\n  }, []);\n\n  const changeAgeCategory = newCategory => {\n    setAgeCategory(newCategory)`http://localhost:3000/change-age-category?id=${AccountData.userData.userId}&age_category=${newCategory}`;\n    fetch(`http://localhost:3000/change-age-category?id=${AccountData.userData.userId}&age_category=${newCategory}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [AccountData.isLoggedIn && /*#__PURE__*/_jsxDEV(HeaderText, {\n      text: `Hello, ${AccountData.userData.userName}!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-ticket-category-container\",\n      children: ageCategory && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Change your ticket category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          defaultValue: ageCategory,\n          onChange: e => changeAgeCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard\",\n            children: \"Standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"child\",\n            children: \"Child (\\u226414 y/o)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pensionary\",\n            children: \"Pensionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TicketInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderText, {\n      text: `Account data`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccountDataSection, {\n      name: userData.userName,\n      email: userData.userEmail,\n      id: userData.userId,\n      refreshUser: refreshUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfilePage, \"uYWVxu+9uo7OaimUDsUe7/mt6eA=\", false, function () {\n  return [useAccountDataUpdate, useAccountData, useNavigate];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageProfile/ProfilePage.js"],"names":["HeaderText","TicketInfo","AccountDataSection","useAccountData","useAccountDataUpdate","useEffect","useState","useNavigate","ProfilePage","props","AccountDataUpdate","AccountData","navigate","userData","setUserdata","ageCategory","setAgeCategory","GetUserRequest","email","response","fetch","data","json","content","userAgeCategory","refreshUser","error","console","log","effectFunction","storageData","JSON","parse","localStorage","getItem","isLoggedIn","userEmail","changeAgeCategory","newCategory","userId","userName","e","target","value"],"mappings":"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","sourcesContent":["import \"./ProfilePage.css\";\r\nimport HeaderText from \"../HeaderText/HeaderText\";\r\nimport TicketInfo from \"./TicketInfo/TicketInfo\";\r\nimport AccountDataSection from \"./AccountDataSection/AccountDataSection\";\r\nimport {useAccountData, useAccountDataUpdate} from \"../AccountContext/AccountProvider\";\r\nimport {useEffect,useState} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction ProfilePage(props) {\r\n\r\n    const AccountDataUpdate = useAccountDataUpdate()\r\n    const AccountData = useAccountData()\r\n    const navigate = useNavigate();\r\n    const [userData,setUserdata] = useState({})\r\n    const [ageCategory,setAgeCategory] = useState(null)\r\n\r\n    async function GetUserRequest(email){\r\n        const response = await fetch(`http://localhost:3000/getuser?email_address=${email}`)\r\n        const data = await response.json();\r\n        setUserdata(data.content)\r\n        setAgeCategory(data.content.userAgeCategory)\r\n        return data;\r\n    }\r\n\r\n    const refreshUser = async (email) =>{\r\n        const response = await GetUserRequest(email)\r\n\r\n        if(response.error)\r\n            navigate('/')\r\n\r\n        setUserdata(response.content)\r\n\r\n        console.log(\"User refreshed. Response:\",response.content)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        async function effectFunction(){\r\n            const storageData = JSON.parse(localStorage.getItem(\"loginStatus\"))\r\n            if(!storageData.isLoggedIn){\r\n                navigate('/')\r\n                return;\r\n            }\r\n\r\n\r\n            //getuser\r\n            refreshUser(storageData.userData.userEmail)\r\n        }\r\n\r\n        effectFunction()\r\n    },[])\r\n\r\n    const changeAgeCategory = (newCategory) =>{\r\n        setAgeCategory(newCategory)\r\n            `http://localhost:3000/change-age-category?id=${AccountData.userData.userId}&age_category=${newCategory}`\r\n        fetch(`http://localhost:3000/change-age-category?id=${AccountData.userData.userId}&age_category=${newCategory}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {AccountData.isLoggedIn && <HeaderText text={`Hello, ${AccountData.userData.userName}!`}/>}\r\n\r\n            <div className=\"change-ticket-category-container\">\r\n                {\r\n                    ageCategory &&\r\n                        <>\r\n                            <h2>Change your ticket category</h2>\r\n                            <select type=\"text\" defaultValue={ageCategory} onChange={e=>changeAgeCategory(e.target.value)}>\r\n                                <option value=\"standard\">Standard</option>\r\n                                <option value=\"child\">Child (&le;14 y/o)</option>\r\n                                <option value=\"student\">Student</option>\r\n                                <option value=\"pensionary\">Pensionary</option>\r\n                            </select>\r\n                        </>\r\n                }\r\n\r\n            </div>\r\n\r\n            <TicketInfo/>\r\n\r\n            <HeaderText text={`Account data`}/>\r\n            <AccountDataSection name={userData.userName} email={userData.userEmail} id={userData.userId} refreshUser={refreshUser}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;\r\n"]},"metadata":{},"sourceType":"module"}