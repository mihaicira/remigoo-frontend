{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageBookTicket\\\\BookTicketPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./BookTicketPage.css\";\nimport { useState, useEffect } from 'react';\nimport DateTime from \"./DateTime/DateTime\";\nimport SelectTickets from \"./SelectTickets/SelectTickets\";\nimport ChooseSeats from \"./ChooseSeats/ChooseSeats\";\nimport Ticket from \"./Ticket/Ticket\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookTicketPage() {\n  _s();\n\n  const [page, changePage] = useState(1);\n  const [scheduleId, setScheduleId] = useState(\"\");\n  const [schedule, setSchedule] = useState(null);\n  const [day, setDay] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [ticketList, changeTicketList] = useState([]);\n  const [selectedSeats, changeSelectedSeats] = useState([]);\n  const [finalizedTicketId, setFinalizedTicketId] = useState(null);\n  const [DBMovie, setDBMovie] = useState(null);\n  const location = useParams();\n\n  const loadData = async () => {\n    let movie_id = location.movieId.split(\"&\")[0];\n    const response = await fetch(`http://localhost:3000/get-movies-by-id?id=${movie_id}`);\n    response.json().then(res => {\n      setDBMovie(res.content);\n    });\n  };\n\n  const finalizeBooking = async () => {\n    let name;\n    ticketList.forEach(ticket => {\n      if (ticket.name !== '') {\n        name = ticket.name;\n        return;\n      }\n    });\n    let userId = -1;\n    let LS = JSON.parse(localStorage.getItem('loginStatus'));\n    if (LS.isLoggedIn) userId = LS.userData.userId;\n    console.log(ticketList);\n    let query = `http://localhost:3000/add-ticket?name=${name}&user=${userId}&id=${scheduleId}`;\n    selectedSeats.forEach(seat => {\n      let numbers = seat.split('-');\n      query = query + `&seats=${numbers[0] * numbers[1]}`;\n    });\n    console.log(query);\n    return;\n    const response = await fetch(query);\n    response.json().then(res => {\n      if (!res.error) {\n        setFinalizedTicketId(res.content);\n        changePage(4);\n      } else {\n        console.log(res.content);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n    let urlDate;\n\n    try {\n      urlDate = window.location.search.split('=')[1];\n      if (urlDate) setDay(urlDate);\n    } catch {//pass\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === 1 && /*#__PURE__*/_jsxDEV(DateTime, {\n      forward: () => {\n        changePage(2);\n      },\n      selectedDay: day,\n      changeSelectedDay: setDay,\n      selectedHour: hour,\n      changeSelectedHour: setHour,\n      schedule: scheduleId,\n      setScheduleId: setScheduleId,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this), page === 2 && /*#__PURE__*/_jsxDEV(SelectTickets, {\n      backwards: () => {\n        changePage(1);\n      },\n      forward: () => {\n        changePage(3);\n      },\n      ticketList: ticketList,\n      changeTicketList: changeTicketList,\n      scheduleId: scheduleId,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }, this), page === 3 && /*#__PURE__*/_jsxDEV(ChooseSeats, {\n      backwards: () => {\n        changePage(2);\n      },\n      forward: () => {\n        changePage(4);\n      },\n      numberOfTickets: ticketList.length,\n      selectedSeats: selectedSeats,\n      changeSelectedSeats: changeSelectedSeats,\n      scheduleId: scheduleId,\n      schedule: schedule,\n      setSchedule: setSchedule,\n      DBMovie: DBMovie,\n      finalizeBooking: finalizeBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }, this), page === 4 && /*#__PURE__*/_jsxDEV(Ticket, {\n      tickets: ticketList,\n      ticketId: finalizedTicketId,\n      DBMovie: DBMovie,\n      schedule: schedule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookTicketPage, \"AP4SJFYbx1F37FxO1XAyNv6UtC8=\", false, function () {\n  return [useParams];\n});\n\n_c = BookTicketPage;\nexport default BookTicketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookTicketPage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageBookTicket/BookTicketPage.js"],"names":["useState","useEffect","DateTime","SelectTickets","ChooseSeats","Ticket","Link","useParams","useNavigate","BookTicketPage","page","changePage","scheduleId","setScheduleId","schedule","setSchedule","day","setDay","hour","setHour","ticketList","changeTicketList","selectedSeats","changeSelectedSeats","finalizedTicketId","setFinalizedTicketId","DBMovie","setDBMovie","location","loadData","movie_id","movieId","split","response","fetch","json","then","res","content","finalizeBooking","name","forEach","ticket","userId","LS","JSON","parse","localStorage","getItem","isLoggedIn","userData","console","log","query","seat","numbers","error","urlDate","window","search","length"],"mappings":"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","sourcesContent":["import \"./BookTicketPage.css\";\r\nimport {useState,useEffect} from 'react';\r\nimport DateTime from \"./DateTime/DateTime\";\r\nimport SelectTickets from \"./SelectTickets/SelectTickets\";\r\nimport ChooseSeats from \"./ChooseSeats/ChooseSeats\";\r\nimport Ticket from \"./Ticket/Ticket\";\r\nimport {Link, useParams, useNavigate} from \"react-router-dom\";\r\n\r\nfunction BookTicketPage() {\r\n\r\n    const [page,changePage] = useState(1)\r\n\r\n    const [scheduleId,setScheduleId] = useState(\"\")\r\n    const [schedule,setSchedule] = useState(null)\r\n\r\n    const [day,setDay] = useState(\"\")\r\n    const [hour,setHour] = useState(\"\")\r\n    const [ticketList,changeTicketList] = useState([])\r\n    const [selectedSeats,changeSelectedSeats] = useState([])\r\n\r\n    const [finalizedTicketId,setFinalizedTicketId] = useState(null)\r\n\r\n    const [DBMovie,setDBMovie] = useState(null)\r\n    const location = useParams()\r\n\r\n    const loadData = async () =>{\r\n        let movie_id = location.movieId.split(\"&\")[0]\r\n        const response = await fetch(`http://localhost:3000/get-movies-by-id?id=${movie_id}`)\r\n        response.json()\r\n            .then(res=>{\r\n                setDBMovie(res.content)\r\n            })\r\n    }\r\n\r\n\r\n    const finalizeBooking = async () =>{\r\n        let name;\r\n        ticketList.forEach(ticket=>{\r\n            if(ticket.name!==''){\r\n                name = ticket.name;\r\n                return;\r\n            }\r\n        })\r\n\r\n        let userId = -1\r\n        let LS = JSON.parse(localStorage.getItem('loginStatus'))\r\n        if(LS.isLoggedIn)\r\n            userId = LS.userData.userId\r\n\r\n        console.log(ticketList)\r\n\r\n\r\n\r\n        let query = `http://localhost:3000/add-ticket?name=${name}&user=${userId}&id=${scheduleId}`\r\n        selectedSeats.forEach(seat=>{\r\n            let numbers = seat.split('-')\r\n            query = query + `&seats=${numbers[0]*numbers[1]}`\r\n        })\r\n\r\n        console.log(query)\r\n        return;\r\n        const response = await fetch(query)\r\n        response.json()\r\n            .then(res=>{\r\n                if(!res.error){\r\n                    setFinalizedTicketId(res.content)\r\n                    changePage(4)\r\n                }\r\n                else{\r\n                    console.log(res.content)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadData()\r\n\r\n        let urlDate;\r\n        try{\r\n            urlDate =  window.location.search.split('=')[1]\r\n            if(urlDate)\r\n                setDay(urlDate);\r\n        }\r\n        catch{\r\n           //pass\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/*<h1> dw{movie.title}</h1>*/}\r\n            {\r\n                page === 1 &&\r\n                    <DateTime forward={()=>{changePage(2)}}\r\n                              selectedDay={day}\r\n                              changeSelectedDay={setDay}\r\n                              selectedHour={hour}\r\n                              changeSelectedHour={setHour}\r\n                              schedule={scheduleId}\r\n                              setScheduleId={setScheduleId}\r\n                              DBMovie={DBMovie}/>\r\n            }\r\n\r\n            {\r\n                page === 2 &&\r\n                    <SelectTickets\r\n                        backwards={()=>{changePage(1)}}\r\n                        forward={()=>{changePage(3)}}\r\n                        ticketList={ticketList}\r\n                        changeTicketList={changeTicketList}\r\n                        scheduleId={scheduleId}\r\n                        DBMovie={DBMovie}/>\r\n            }\r\n\r\n            {\r\n                page === 3 &&\r\n                    <ChooseSeats\r\n                        backwards={()=>{changePage(2)}}\r\n                        forward={()=>{changePage(4)}}\r\n                        numberOfTickets={ticketList.length}\r\n                        selectedSeats={selectedSeats}\r\n                        changeSelectedSeats={changeSelectedSeats}\r\n                        scheduleId={scheduleId}\r\n                        schedule={schedule}\r\n                        setSchedule={setSchedule}\r\n                        DBMovie={DBMovie}\r\n                        finalizeBooking={finalizeBooking}/>\r\n            }\r\n\r\n            {\r\n                page === 4 &&\r\n                    <Ticket\r\n                        tickets={ticketList}\r\n                        ticketId={finalizedTicketId}\r\n                        DBMovie={DBMovie}\r\n                        schedule={schedule}/>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BookTicketPage;\r\n"]},"metadata":{},"sourceType":"module"}