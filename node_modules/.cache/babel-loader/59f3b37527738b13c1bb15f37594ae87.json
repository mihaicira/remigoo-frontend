{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageBookTicket\\\\DateTime\\\\DateTime.js\",\n    _s = $RefreshSig$();\n\nimport \"./DateTime.css\";\nimport BackArrow from \"../../../assets/back-arrow.svg\";\nimport ContinueArrow from \"../../../assets/continue-arrow.svg\";\nimport { useEffect, useState } from 'react';\nimport { beautifyMinutes, compareHours, monthNumberToString } from \"../../../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DateTime(props) {\n  _s();\n\n  const changeDayHandler = value => {\n    props.changeSelectedDay(value);\n    props.changeSelectedHour(\"\");\n  };\n\n  const [mySchedule, setMySchedule] = useState({});\n  useEffect(() => {\n    let tempSchedule = {};\n\n    if (props.DBMovie) {\n      props.DBMovie.schedule.forEach(schedule => {\n        if (tempSchedule[schedule.date]) tempSchedule[schedule.date].push({\n          time: schedule.time,\n          scheduleId: schedule.id\n        });else tempSchedule[schedule.date] = [{\n          time: schedule.time,\n          scheduleId: schedule.id\n        }];\n      });\n      tempSchedule.forEach(day => {\n        tempSchedule[day].sort((a, b) => compareHours(a.time, b.time));\n      });\n      console.log(tempSchedule);\n      setMySchedule(tempSchedule);\n    }\n  }, [props.DBMovie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-page-container\",\n    children: [props.DBMovie && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.DBMovie.movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this), props.DBMovie && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${props.DBMovie.movie.trailer}`,\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), props.DBMovie && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"genre-time\",\n      children: [props.DBMovie.movie.genre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 88\n      }, this), beautifyMinutes(props.DBMovie.movie.duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pickers-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-picker\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-results\",\n          children: props.DBMovie && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: Object.keys(mySchedule).map(day => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: day === props.selectedDay ? \"picker-result active-picked-result\" : \"picker-result\",\n              onClick: () => {\n                changeDayHandler(day);\n              },\n              children: `${day.split('-')[2]} ${monthNumberToString(day.split('-')[1])} ${day.split('-')[0]}`\n            }, `date-${day}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 74\n            }, this))\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: props.selectedDay !== \"\" ? \"hour-picker\" : \"hour-picker invisible-book-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select an hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hour-results\",\n          children: props.selectedDay && mySchedule[props.selectedDay].map(schedule => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: schedule.time === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\",\n            onClick: () => {\n              props.changeSelectedHour(schedule.time);\n            },\n            children: schedule.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 77\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: BackArrow,\n        alt: \"back-arrow\",\n        className: \"invisible-book-btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ContinueArrow,\n        alt: \"continue-arrow\",\n        className: props.selectedHour !== \"\" && props.selectedDay !== \"\" ? \"\" : \"disabled-book-btn\",\n        onClick: props.forward\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DateTime, \"EvrguEjjXMGIz0RAIweFa5jtfy8=\");\n\n_c = DateTime;\nexport default DateTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTime\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageBookTicket/DateTime/DateTime.js"],"names":["useEffect","useState","beautifyMinutes","compareHours","monthNumberToString","DateTime","props","changeDayHandler","value","changeSelectedDay","changeSelectedHour","mySchedule","setMySchedule","tempSchedule","DBMovie","schedule","forEach","date","push","time","scheduleId","id","day","sort","a","b","console","log","movie","title","trailer","genre","duration","Object","keys","map","selectedDay","split","selectedHour","BackArrow","ContinueArrow","forward"],"mappings":"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","sourcesContent":["import \"./DateTime.css\";\r\nimport BackArrow from '../../../assets/back-arrow.svg'\r\nimport ContinueArrow from '../../../assets/continue-arrow.svg'\r\nimport {useEffect,useState} from 'react';\r\nimport {beautifyMinutes, compareHours, monthNumberToString} from \"../../../utils/utils\";\r\n\r\nfunction DateTime(props) {\r\n\r\n    const changeDayHandler = (value) =>{\r\n        props.changeSelectedDay(value)\r\n        props.changeSelectedHour(\"\")\r\n    }\r\n\r\n    const [mySchedule,setMySchedule] = useState({})\r\n\r\n    useEffect(()=>{\r\n        let tempSchedule = {}\r\n        if(props.DBMovie){\r\n            props.DBMovie.schedule.forEach(schedule=>{\r\n                if(tempSchedule[schedule.date])\r\n                    tempSchedule[schedule.date].push({time:schedule.time,scheduleId:schedule.id})\r\n                else\r\n                    tempSchedule[schedule.date] = [{time:schedule.time,scheduleId:schedule.id}]\r\n            })\r\n\r\n            tempSchedule.forEach(day=>{\r\n                tempSchedule[day].sort((a,b)=>compareHours(a.time,b.time))\r\n            })\r\n            console.log(tempSchedule)\r\n\r\n            setMySchedule(tempSchedule)\r\n        }\r\n\r\n    },[props.DBMovie])\r\n\r\n    return (\r\n        <div className=\"book-page-container\">\r\n\r\n            {\r\n                props.DBMovie && <h2>{props.DBMovie.movie.title}</h2>\r\n            }\r\n\r\n            {\r\n                props.DBMovie &&\r\n                <iframe  src={`https://www.youtube.com/embed/${props.DBMovie.movie.trailer}`}\r\n                    title=\"YouTube video player\" frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen></iframe>\r\n            }\r\n\r\n\r\n            {\r\n                props.DBMovie &&  <p className=\"genre-time\">{props.DBMovie.movie.genre}<br/>{beautifyMinutes(props.DBMovie.movie.duration)}</p>\r\n            }\r\n\r\n            <div className=\"pickers-container\">\r\n                <div className=\"date-picker\">\r\n                    <h3>Select a day</h3>\r\n                    <div className=\"date-results\">\r\n                        {\r\n                            props.DBMovie &&\r\n                                <>\r\n                                    {\r\n                                        Object.keys(mySchedule).map(day=><p key={`date-${day}`} className={day === props.selectedDay ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{changeDayHandler(day)}}>{`${day.split('-')[2]} ${monthNumberToString(day.split('-')[1])} ${day.split('-')[0]}`}</p>)\r\n                                    }\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={props.selectedDay !== \"\" ? \"hour-picker\" : \"hour-picker invisible-book-btn\"}>\r\n                    <h3>Select an hour</h3>\r\n                    <div className=\"hour-results\">\r\n                        {\r\n                            props.selectedDay &&\r\n                                mySchedule[props.selectedDay].map(schedule=><p className={schedule.time === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{props.changeSelectedHour(schedule.time)}}>{schedule.time}</p>)\r\n                        }\r\n                        {/*{*/}\r\n                        {/*    mySchedule[props.selectedDay].map(schedule=><p className={schedule.time === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{props.changeSelectedHour(schedule.time)}}>{schedule.time}</p>)*/}\r\n                        {/*}*/}\r\n                        {/*<p className={\"23:40\" === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{props.changeSelectedHour(\"23:40\")}}>23:40</p>*/}\r\n                        {/*<p className={\"23:41\" === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{props.changeSelectedHour(\"23:41\")}}>23:41</p>*/}\r\n                        {/*<p className={\"23:42\" === props.selectedHour ? \"picker-result active-picked-result\" : \"picker-result\"} onClick={()=>{props.changeSelectedHour(\"23:42\")}}>23:42</p>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"buttons-container\">\r\n                <img src={BackArrow} alt=\"back-arrow\" className=\"invisible-book-btn\"/>\r\n                <img src={ContinueArrow} alt=\"continue-arrow\" className={(props.selectedHour!==\"\" && props.selectedDay!==\"\") ? \"\" : \"disabled-book-btn\"} onClick={props.forward}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateTime;\r\n"]},"metadata":{},"sourceType":"module"}