{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageLoginSignup\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./LoginSignup.css\";\nimport Button from \"../Button/Button\";\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { popUpError } from '../../utils/utils.js';\nimport { useAccountData, useAccountDataUpdate } from \"../AccountContext/AccountProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [inputEmail, changeInputEmail] = useState(\"\");\n  const [inputPassword, changeInputPassword] = useState(\"\");\n  const AccountDataUpdate = useAccountDataUpdate();\n  const AccountData = useAccountData();\n\n  async function LoginRequest(obj) {\n    //    email,password\n    //     console.log(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`)\n    const response = await fetch(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`);\n    response.json(res => {\n      console.log(res);\n    });\n  }\n\n  const handleForm = async e => {\n    e.preventDefault(); // AccountDataUpdate({\n    //                     isLoggedIn: true,\n    //                         userData:{\n    //                         userId: \"someuserid\",\n    //                         userName: \"somename\",\n    //                         userEmail: \"someemail\",\n    //                         token: 2323\n    //                         }\n    //                  })\n    //complete all fields\n\n    if (inputEmail === '' || inputPassword === '') {\n      setError(\"Complete all fields.\");\n      popUpError();\n      return;\n    }\n\n    console.log('passed');\n    const response = await LoginRequest({\n      email: inputEmail,\n      password: inputPassword\n    });\n    console.log(response);\n  };\n  /*\r\n  *           LOGIN...\r\n  *\r\n  * LoginStatus={\r\n                 isLoggedIn: <true/false>\r\n                 userData:{\r\n                         userId: <id>\r\n                         userName: <name>\r\n                         userEmail: <email>\r\n                         token: <SERVER_TOKEN>\r\n                          }\r\n               }\r\n  * */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        required: true,\n        onChange: e => {\n          changeInputEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        required: true,\n        onChange: e => {\n          changeInputPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"account-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Login\",\n        event: handleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"He9p0W1JRjXqn+v9I51vvOH55nA=\", false, function () {\n  return [useAccountDataUpdate, useAccountData];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageLoginSignup/LoginPage.js"],"names":["Button","useState","Link","popUpError","useAccountData","useAccountDataUpdate","LoginPage","error","setError","inputEmail","changeInputEmail","inputPassword","changeInputPassword","AccountDataUpdate","AccountData","LoginRequest","obj","response","fetch","email","password","json","res","console","log","handleForm","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import \"./LoginSignup.css\";\r\nimport Button from \"../Button/Button\";\r\nimport {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {popUpError} from '../../utils/utils.js'\r\nimport {useAccountData, useAccountDataUpdate} from \"../AccountContext/AccountProvider\";\r\n\r\nfunction LoginPage() {\r\n    const [error,setError] = useState(\"\")\r\n    const [inputEmail,changeInputEmail] = useState(\"\")\r\n    const [inputPassword,changeInputPassword] = useState(\"\")\r\n\r\n    const AccountDataUpdate = useAccountDataUpdate()\r\n    const AccountData = useAccountData()\r\n\r\n    async function LoginRequest(obj){\r\n    //    email,password\r\n    //     console.log(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`)\r\n        const response = await fetch(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`)\r\n        response.json(res=>{\r\n            console.log(res)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleForm = async (e)=>{\r\n        e.preventDefault();\r\n\r\n        // AccountDataUpdate({\r\n        //                     isLoggedIn: true,\r\n        //                         userData:{\r\n        //                         userId: \"someuserid\",\r\n        //                         userName: \"somename\",\r\n        //                         userEmail: \"someemail\",\r\n        //                         token: 2323\r\n        //                         }\r\n        //                  })\r\n\r\n        //complete all fields\r\n        if(inputEmail === '' || inputPassword === '' ){\r\n            setError(\"Complete all fields.\")\r\n            popUpError()\r\n            return;\r\n        }\r\n\r\n        console.log('passed')\r\n        const response = await LoginRequest({\r\n            email:inputEmail,\r\n            password:inputPassword\r\n        })\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    /*\r\n    *           LOGIN...\r\n    *\r\n    * LoginStatus={\r\n                   isLoggedIn: <true/false>\r\n                   userData:{\r\n                           userId: <id>\r\n                           userName: <name>\r\n                           userEmail: <email>\r\n                           token: <SERVER_TOKEN>\r\n                            }\r\n                 }\r\n    * */\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-signup-form-container\">\r\n\r\n            <h2>Login</h2>\r\n            <form>\r\n                <label>Email address</label>\r\n                <input type=\"text\" placeholder=\"email\" required onChange={(e)=>{changeInputEmail(e.target.value)}}/>\r\n\r\n                <label>Password</label>\r\n                <input type=\"password\" placeholder=\"password\" required onChange={(e)=>{changeInputPassword(e.target.value)}}/>\r\n\r\n                <p id=\"account-error\">{error}</p>\r\n\r\n                <Button text=\"Login\" event={handleForm}/>\r\n\r\n                <Link to=\"/signup\">Create an account</Link>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}