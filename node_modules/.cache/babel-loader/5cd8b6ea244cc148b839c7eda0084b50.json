{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\MainPage\\\\SelectDay\\\\SelectDay.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./SelectDay.css\";\nimport Button from \"../../Button/Button\";\nimport { useEffect, useState } from 'react';\nimport HeaderText from \"../../HeaderText/HeaderText\";\nimport LoadingAnimation from \"../../LoadingAnimation/LoadingAnimation\";\nimport { beautifyMinutes, isDateInPast } from \"../../../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Results = _ref => {\n  _s();\n\n  let {\n    value\n  } = _ref;\n  const [data, setData] = useState({});\n\n  const loadData = async () => {\n    const response = await fetch(`http://localhost:3000/get-movies-by-date?date=${value}`);\n    console.log(`http://localhost:3000/get-movies-by-date?date=${value}`);\n    response.json().then(res => {\n      console.log(\"Response: \", res);\n      setData(res);\n    });\n  };\n\n  useEffect(() => {\n    setData({});\n    loadData();\n    return () => {};\n  }, [value]); // if(isDateInPast(value))\n  //     return <p>date is in past</p>\n\n  if (data.content) {\n    if (!data.error) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data.content.map(movie => {\n          let times;\n\n          try {\n            times = movie.time.split(', ');\n          } catch {\n            times = [movie.time];\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectDay-movie\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.img,\n              alt: `img-of-${movie.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectDay-movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [movie.title, \" (\", movie.year, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                text: \"Book now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [movie.genre, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this), beautifyMinutes(movie.duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectDay-movie-hours\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: times.map(time => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)]\n          }, \"movie-by-date-\" + movie.title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false);\n    } else return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies scheduled for the selected date.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 16\n  }, this);\n};\n\n_s(Results, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = Results;\n\nfunction SelectDay() {\n  _s2();\n\n  const [selectedDay, changeSelectedDay] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectDay section\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderText, {\n      text: \"Select a day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: ev => {\n        changeSelectedDay(ev.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), selectedDay !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectDay-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Scheduled movies for \", selectedDay.split('-')[2], \"/\", selectedDay.split('-')[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectDay-list-of-results\",\n        children: /*#__PURE__*/_jsxDEV(Results, {\n          value: selectedDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(SelectDay, \"l6yvmfqAIQVl2rqk+oM2ywmEpWI=\");\n\n_c2 = SelectDay;\nexport default SelectDay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Results\");\n$RefreshReg$(_c2, \"SelectDay\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/MainPage/SelectDay/SelectDay.js"],"names":["Button","useEffect","useState","HeaderText","LoadingAnimation","beautifyMinutes","isDateInPast","Results","value","data","setData","loadData","response","fetch","console","log","json","then","res","content","error","map","movie","times","time","split","img","title","year","genre","duration","SelectDay","selectedDay","changeSelectedDay","ev","target"],"mappings":"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","sourcesContent":["import \"./SelectDay.css\";\r\nimport Button from \"../../Button/Button\";\r\nimport {useEffect, useState} from 'react';\r\nimport HeaderText from \"../../HeaderText/HeaderText\";\r\nimport LoadingAnimation from \"../../LoadingAnimation/LoadingAnimation\";\r\nimport {beautifyMinutes, isDateInPast} from \"../../../utils/utils\";\r\n\r\nconst Results = ({value})=>{\r\n    const [data, setData] = useState({});\r\n\r\n    const loadData = async () =>{\r\n        const response = await fetch(`http://localhost:3000/get-movies-by-date?date=${value}`)\r\n        console.log(`http://localhost:3000/get-movies-by-date?date=${value}`)\r\n        response.json()\r\n            .then(res=>{\r\n                console.log(\"Response: \",res)\r\n                setData(res)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setData({})\r\n        loadData();\r\n        return ()=>{};\r\n    },[value])\r\n\r\n\r\n    // if(isDateInPast(value))\r\n    //     return <p>date is in past</p>\r\n\r\n    if(data.content)\r\n        if(!data.error){\r\n\r\n            return <>\r\n                {data.content.map(movie=>{\r\n                    let times;\r\n                    try{\r\n                        times = movie.time.split(', ')\r\n                    }\r\n                    catch{\r\n                        times = [movie.time]\r\n                    }\r\n                    return <div className=\"selectDay-movie\" key={\"movie-by-date-\"+movie.title}>\r\n                        <img src={movie.img} alt={`img-of-${movie.title}`}/>\r\n\r\n                        <div className=\"selectDay-movie-info\">\r\n                            <p>{movie.title} ({movie.year})</p>\r\n                            <Button text=\"Book now\"/>\r\n                            <p>{movie.genre}<br/>{beautifyMinutes(movie.duration)}</p>\r\n                        </div>\r\n\r\n                        <div className=\"selectDay-movie-hours\">\r\n                            <ul>\r\n                                {\r\n                                    times.map(time=><li>{time}</li>)\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                )}\r\n\r\n            </>\r\n        }\r\n        else\r\n            return <p>There are no movies scheduled for the selected date.</p>\r\n    else\r\n        return <LoadingAnimation/>\r\n\r\n\r\n}\r\n\r\n\r\nfunction SelectDay() {\r\n    const [selectedDay,changeSelectedDay] = useState('')\r\n    return (\r\n        <div className=\"selectDay section\">\r\n            <HeaderText text=\"Select a day\"/>\r\n            <input type=\"date\" onChange={(ev)=>{changeSelectedDay(ev.target.value)}}/>\r\n            {\r\n                selectedDay !== '' &&\r\n                <div className=\"selectDay-results\">\r\n                    <h2>Scheduled movies for {selectedDay.split('-')[2]}/{selectedDay.split('-')[1]}</h2>\r\n                    <div className=\"selectDay-list-of-results\">\r\n\r\n                        <Results value={selectedDay}/>\r\n\r\n                        {/*<div className=\"selectDay-movie\">*/}\r\n                        {/*    <img src={ExampleImage} alt=\"example-img\"/>*/}\r\n\r\n                        {/*    <div className=\"selectDay-movie-info\">*/}\r\n                        {/*        <p>Lovehard (2020)</p>*/}\r\n                        {/*        <Button text=\"Book now\"/>*/}\r\n                        {/*        <p>Drama<br/>1h 80m</p>*/}\r\n                        {/*    </div>*/}\r\n\r\n                        {/*    <div className=\"selectDay-movie-hours\">*/}\r\n                        {/*        <ul>*/}\r\n                        {/*            <li>13:40</li>*/}\r\n                        {/*            <li>14:40</li>*/}\r\n                        {/*            <li>15:40</li>*/}\r\n                        {/*            <li>17:40</li>*/}\r\n                        {/*        </ul>*/}\r\n                        {/*    </div>*/}\r\n                        {/*</div>*/}\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectDay;\r\n"]},"metadata":{},"sourceType":"module"}