{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\LoginSignup\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./LoginSignup.css\";\nimport Button from \"../Button/Button\";\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [inputEmail, changeInputEmail] = useState(\"\");\n  const [inputPassword, changeInputPassword] = useState(\"\");\n\n  const popUpError = () => {\n    document.getElementById(\"account-error\").style.transform = \"scale(1.2)\";\n    setTimeout(() => {\n      document.getElementById(\"account-error\").style.transform = \"scale(1)\";\n    }, 500);\n  };\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const handleForm = e => {\n    console.log(inputEmail, inputPassword);\n    e.preventDefault(); //email validation\n\n    if (!validateEmail(inputEmail)) {\n      setError(\"Email address is invalid.\");\n      popUpError();\n      return;\n    } //passwords match\n\n\n    if (inputRepeatPassword !== inputPassword) {\n      setError(\"Passwords do not match.\");\n      popUpError();\n      return;\n    }\n\n    console.log('passed');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        required: true,\n        onChange: e => {\n          changeInputEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        required: true,\n        onChange: e => {\n          changeInputPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"account-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Login\",\n        event: handleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"s/5vsR9ssm65hTGp56022mwbcKg=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/LoginSignup/LoginPage.js"],"names":["Button","useState","Link","LoginPage","error","setError","inputEmail","changeInputEmail","inputPassword","changeInputPassword","popUpError","document","getElementById","style","transform","setTimeout","validateEmail","email","re","test","String","toLowerCase","handleForm","e","console","log","preventDefault","inputRepeatPassword","target","value"],"mappings":"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","sourcesContent":["import \"./LoginSignup.css\";\r\nimport Button from \"../Button/Button\";\r\nimport {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction LoginPage() {\r\n    const [error,setError] = useState(\"\")\r\n    const [inputEmail,changeInputEmail] = useState(\"\")\r\n    const [inputPassword,changeInputPassword] = useState(\"\")\r\n\r\n    const popUpError = () =>{\r\n        document.getElementById(\"account-error\").style.transform=\"scale(1.2)\";\r\n        setTimeout(()=>{\r\n            document.getElementById(\"account-error\").style.transform=\"scale(1)\";\r\n        },500)\r\n    }\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleForm = (e)=>{\r\n        console.log(inputEmail,inputPassword)\r\n        e.preventDefault();\r\n\r\n        //email validation\r\n        if(!validateEmail(inputEmail)){\r\n            setError(\"Email address is invalid.\")\r\n            popUpError()\r\n            return;\r\n        }\r\n\r\n        //passwords match\r\n        if(inputRepeatPassword !== inputPassword){\r\n            setError(\"Passwords do not match.\")\r\n            popUpError()\r\n            return;\r\n        }\r\n\r\n        console.log('passed')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-signup-form-container\">\r\n\r\n            <h2>Login</h2>\r\n            <form>\r\n                <label>Email address</label>\r\n                <input type=\"text\" placeholder=\"email\" required onChange={(e)=>{changeInputEmail(e.target.value)}}/>\r\n\r\n                <label>Password</label>\r\n                <input type=\"password\" placeholder=\"password\" required onChange={(e)=>{changeInputPassword(e.target.value)}}/>\r\n\r\n                <p id=\"account-error\">{error}</p>\r\n\r\n                <Button text=\"Login\" event={handleForm}/>\r\n\r\n                <Link to=\"/signup\">Create an account</Link>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}