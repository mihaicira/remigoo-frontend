{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageLoginSignup\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./LoginSignup.css\";\nimport Button from \"../Button/Button\";\nimport { useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { popUpError, LoginRequest } from '../../utils/utils.js';\nimport { useAccountData, useAccountDataUpdate } from \"../AccountContext/AccountProvider\";\nimport { sha256 } from 'js-sha256';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [inputEmail, changeInputEmail] = useState(\"\");\n  const [inputPassword, changeInputPassword] = useState(\"\");\n  const AccountDataUpdate = useAccountDataUpdate();\n  const AccountData = useAccountData();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (AccountData.isLoggedIn) navigate('/');\n  }, []);\n\n  const handleForm = async e => {\n    e.preventDefault(); // changeInputEmail(\"mihai12@yahoo.com\")\n    // changeInputPassword(\"kaka\")\n    //complete all fields\n\n    if (inputEmail === '' || inputPassword === '') {\n      setError(\"Complete all fields.\");\n      popUpError();\n      return;\n    }\n\n    const response = await LoginRequest({\n      email: inputEmail,\n      password: sha256(inputPassword)\n    });\n\n    if (response.error) {\n      setError(response.content);\n      popUpError();\n      return;\n    }\n\n    AccountDataUpdate({\n      isLoggedIn: true,\n      userData: {\n        userId: response.content.userId,\n        userName: response.content.userName,\n        userEmail: response.content.userEmail,\n        ageCategory: response.content.userAgeCategory,\n        token: response.content.token\n      }\n    }); //redirect to Home\n\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        required: true,\n        onChange: e => {\n          changeInputEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        required: true,\n        onChange: e => {\n          changeInputPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"account-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Login\",\n        event: handleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"SzgcXZm3Qk86I8rpIcO9ykV7Qig=\", false, function () {\n  return [useAccountDataUpdate, useAccountData, useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageLoginSignup/LoginPage.js"],"names":["Button","useState","useEffect","Link","useNavigate","popUpError","LoginRequest","useAccountData","useAccountDataUpdate","sha256","LoginPage","error","setError","inputEmail","changeInputEmail","inputPassword","changeInputPassword","AccountDataUpdate","AccountData","navigate","isLoggedIn","handleForm","e","preventDefault","response","email","password","content","userData","userId","userName","userEmail","ageCategory","userAgeCategory","token","target","value"],"mappings":"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","sourcesContent":["import \"./LoginSignup.css\";\r\nimport Button from \"../Button/Button\";\r\nimport {useState,useEffect} from 'react';\r\nimport {Link,useNavigate} from \"react-router-dom\";\r\nimport {popUpError,LoginRequest} from '../../utils/utils.js'\r\nimport {useAccountData, useAccountDataUpdate} from \"../AccountContext/AccountProvider\";\r\nimport { sha256 } from 'js-sha256';\r\n\r\nfunction LoginPage() {\r\n    const [error,setError] = useState(\"\")\r\n    const [inputEmail,changeInputEmail] = useState(\"\")\r\n    const [inputPassword,changeInputPassword] = useState(\"\")\r\n\r\n    const AccountDataUpdate = useAccountDataUpdate()\r\n    const AccountData = useAccountData()\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n        if(AccountData.isLoggedIn)\r\n            navigate('/')\r\n    },[])\r\n\r\n\r\n\r\n\r\n    const handleForm = async (e)=> {\r\n        e.preventDefault();\r\n\r\n        // changeInputEmail(\"mihai12@yahoo.com\")\r\n        // changeInputPassword(\"kaka\")\r\n\r\n        //complete all fields\r\n        if (inputEmail === '' || inputPassword === '') {\r\n            setError(\"Complete all fields.\")\r\n            popUpError()\r\n            return;\r\n        }\r\n\r\n        const response = await LoginRequest({\r\n            email: inputEmail,\r\n            password: sha256(inputPassword)\r\n        })\r\n\r\n        if (response.error) {\r\n            setError(response.content)\r\n            popUpError()\r\n            return;\r\n        }\r\n\r\n        AccountDataUpdate({\r\n            isLoggedIn: true,\r\n            userData: {\r\n                userId: response.content.userId,\r\n                userName: response.content.userName,\r\n                userEmail: response.content.userEmail,\r\n                ageCategory: response.content.userAgeCategory,\r\n                token: response.content.token\r\n            }\r\n        })\r\n\r\n        //redirect to Home\r\n        navigate(\"/\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login-signup-form-container\">\r\n\r\n            <h2>Login</h2>\r\n            <form>\r\n                <label>Email address</label>\r\n                <input type=\"text\" placeholder=\"email\" required onChange={(e)=>{changeInputEmail(e.target.value)}}/>\r\n\r\n                <label>Password</label>\r\n                <input type=\"password\" placeholder=\"password\" required onChange={(e)=>{changeInputPassword(e.target.value)}}/>\r\n\r\n                <p id=\"account-error\">{error}</p>\r\n\r\n                <Button text=\"Login\" event={handleForm}/>\r\n\r\n                <Link to=\"/signup\">Create an account</Link>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}