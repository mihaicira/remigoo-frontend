{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\PageBookTicket\\\\BookTicketPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./BookTicketPage.css\";\nimport { useState, useEffect } from 'react';\nimport DateTime from \"./DateTime/DateTime\";\nimport SelectTickets from \"./SelectTickets/SelectTickets\";\nimport ChooseSeats from \"./ChooseSeats/ChooseSeats\";\nimport Ticket from \"./Ticket/Ticket\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookTicketPage() {\n  _s();\n\n  const [page, changePage] = useState(1);\n  const [scheduleId, setScheduleId] = useState(\"\");\n  const [schedule, setSchedule] = useState(null);\n  const [day, setDay] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [ticketList, changeTicketList] = useState([]);\n  const [selectedSeats, changeSelectedSeats] = useState([]);\n  const [DBMovie, setDBMovie] = useState(null);\n  const location = useParams();\n\n  const loadData = async () => {\n    let movie_id = location.movieId.split(\"&\")[0];\n    const response = await fetch(`http://localhost:3000/get-movies-by-id?id=${movie_id}`);\n    response.json().then(res => {\n      setDBMovie(res.content);\n      console.log(res.content);\n    });\n  };\n\n  const finaliseBooking = async () => {\n    const response = await fetch(`http://localhost:3000/getTrending`);\n    response.json().then(res => {\n      setData(res);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n    let urlDate;\n\n    try {\n      urlDate = window.location.search.split('=')[1];\n      if (urlDate) setDay(urlDate);\n    } catch {//pass\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === 1 && /*#__PURE__*/_jsxDEV(DateTime, {\n      forward: () => {\n        changePage(2);\n      },\n      selectedDay: day,\n      changeSelectedDay: setDay,\n      selectedHour: hour,\n      changeSelectedHour: setHour,\n      schedule: scheduleId,\n      setScheduleId: setScheduleId,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), page === 2 && /*#__PURE__*/_jsxDEV(SelectTickets, {\n      backwards: () => {\n        changePage(1);\n      },\n      forward: () => {\n        changePage(3);\n      },\n      ticketList: ticketList,\n      changeTicketList: changeTicketList,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), page === 3 && /*#__PURE__*/_jsxDEV(ChooseSeats, {\n      backwards: () => {\n        changePage(2);\n      },\n      forward: () => {\n        changePage(4);\n      },\n      numberOfTickets: ticketList.length,\n      selectedSeats: selectedSeats,\n      changeSelectedSeats: changeSelectedSeats,\n      scheduleId: scheduleId,\n      schedule: schedule,\n      setSchedule: setSchedule,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), page === 4 && /*#__PURE__*/_jsxDEV(Ticket, {\n      tickets: ticketList,\n      DBMovie: DBMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookTicketPage, \"/O8gvOl8OMSxwg1VRWhnZPIZVmw=\", false, function () {\n  return [useParams];\n});\n\n_c = BookTicketPage;\nexport default BookTicketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookTicketPage\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/PageBookTicket/BookTicketPage.js"],"names":["useState","useEffect","DateTime","SelectTickets","ChooseSeats","Ticket","Link","useParams","useNavigate","BookTicketPage","page","changePage","scheduleId","setScheduleId","schedule","setSchedule","day","setDay","hour","setHour","ticketList","changeTicketList","selectedSeats","changeSelectedSeats","DBMovie","setDBMovie","location","loadData","movie_id","movieId","split","response","fetch","json","then","res","content","console","log","finaliseBooking","setData","urlDate","window","search","length"],"mappings":"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","sourcesContent":["import \"./BookTicketPage.css\";\r\nimport {useState,useEffect} from 'react';\r\nimport DateTime from \"./DateTime/DateTime\";\r\nimport SelectTickets from \"./SelectTickets/SelectTickets\";\r\nimport ChooseSeats from \"./ChooseSeats/ChooseSeats\";\r\nimport Ticket from \"./Ticket/Ticket\";\r\nimport {Link, useParams, useNavigate} from \"react-router-dom\";\r\n\r\nfunction BookTicketPage() {\r\n\r\n    const [page,changePage] = useState(1)\r\n\r\n    const [scheduleId,setScheduleId] = useState(\"\")\r\n    const [schedule,setSchedule] = useState(null)\r\n\r\n    const [day,setDay] = useState(\"\")\r\n    const [hour,setHour] = useState(\"\")\r\n    const [ticketList,changeTicketList] = useState([])\r\n    const [selectedSeats,changeSelectedSeats] = useState([])\r\n\r\n    const [DBMovie,setDBMovie] = useState(null)\r\n    const location = useParams()\r\n\r\n    const loadData = async () =>{\r\n        let movie_id = location.movieId.split(\"&\")[0]\r\n        const response = await fetch(`http://localhost:3000/get-movies-by-id?id=${movie_id}`)\r\n        response.json()\r\n            .then(res=>{\r\n                setDBMovie(res.content)\r\n                console.log(res.content)\r\n            })\r\n    }\r\n\r\n\r\n    const finaliseBooking = async () =>{\r\n        const response = await fetch(`http://localhost:3000/getTrending`)\r\n        response.json()\r\n            .then(res=>{\r\n                setData(res)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadData()\r\n\r\n        let urlDate;\r\n        try{\r\n            urlDate =  window.location.search.split('=')[1]\r\n            if(urlDate)\r\n                setDay(urlDate);\r\n        }\r\n        catch{\r\n           //pass\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/*<h1> dw{movie.title}</h1>*/}\r\n            {\r\n                page === 1 &&\r\n                <DateTime forward={()=>{changePage(2)}}\r\n                          selectedDay={day}\r\n                          changeSelectedDay={setDay}\r\n                          selectedHour={hour}\r\n                          changeSelectedHour={setHour}\r\n                          schedule={scheduleId}\r\n                          setScheduleId={setScheduleId}\r\n                          DBMovie={DBMovie}/>\r\n            }\r\n\r\n            {\r\n                page === 2 &&\r\n                <SelectTickets\r\n                    backwards={()=>{changePage(1)}}\r\n                    forward={()=>{changePage(3)}}\r\n                    ticketList={ticketList}\r\n                    changeTicketList={changeTicketList}\r\n                    DBMovie={DBMovie}/>\r\n            }\r\n\r\n            {\r\n                page === 3 &&\r\n                <ChooseSeats\r\n                    backwards={()=>{changePage(2)}}\r\n                    forward={()=>{changePage(4)}}\r\n                    numberOfTickets={ticketList.length}\r\n                    selectedSeats={selectedSeats}\r\n                    changeSelectedSeats={changeSelectedSeats}\r\n                    scheduleId={scheduleId}\r\n                    schedule={schedule}\r\n                    setSchedule={setSchedule}\r\n                    DBMovie={DBMovie}/>\r\n            }\r\n\r\n            {\r\n                page === 4 &&\r\n                    <Ticket\r\n                        tickets={ticketList}\r\n                        DBMovie={DBMovie}/>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BookTicketPage;\r\n"]},"metadata":{},"sourceType":"module"}