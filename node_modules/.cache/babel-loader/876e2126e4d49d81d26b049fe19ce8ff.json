{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\remigoo\\\\src\\\\Components\\\\AccountContext\\\\AccountProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/React.createContext();\nconst AccountUpdateContext = /*#__PURE__*/React.createContext();\nexport function useAccountData() {\n  _s();\n\n  return useContext(AccountContext);\n}\n\n_s(useAccountData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useAccountDataUpdate() {\n  _s2();\n\n  return useContext(AccountUpdateContext);\n}\n\n_s2(useAccountDataUpdate, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AccountProvider(_ref) {\n  _s3();\n\n  let {\n    children\n  } = _ref;\n  const [accountData, setAccountData] = useState({});\n\n  function changeAccountDataHandler(newData) {\n    localStorage.setItem(\"loginStatus\", JSON.stringify(newData));\n    setAccountData(newData);\n  }\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"loginStatus\");\n    console.log(JSON.parse(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: accountData,\n    children: /*#__PURE__*/_jsxDEV(AccountUpdateContext.Provider, {\n      value: changeAccountDataHandler,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(AccountProvider, \"r4FB28tbpocK5HrjUY0gNz6Yq7o=\");\n\n_c = AccountProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"sources":["D:/react/remigoo/src/Components/AccountContext/AccountProvider.js"],"names":["React","useContext","useState","useEffect","AccountContext","createContext","AccountUpdateContext","useAccountData","useAccountDataUpdate","AccountProvider","children","accountData","setAccountData","changeAccountDataHandler","newData","localStorage","setItem","JSON","stringify","data","getItem","console","log","parse"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;AACA,MAAMC,oBAAoB,gBAAGN,KAAK,CAACK,aAAN,EAA7B;AAEA,OAAO,SAASE,cAAT,GAAyB;AAAA;;AAC5B,SAAON,UAAU,CAACG,cAAD,CAAjB;AACH;;GAFeG,c;;AAIhB,OAAO,SAASC,oBAAT,GAA+B;AAAA;;AAClC,SAAOP,UAAU,CAACK,oBAAD,CAAjB;AACH;;IAFeE,oB;;AAIhB,OAAO,SAASC,eAAT,OAAoC;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACvC,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BV,QAAQ,CAAC,EAAD,CAA7C;;AAEA,WAASW,wBAAT,CAAkCC,OAAlC,EAA0C;AACtCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAnC;AACAF,IAAAA,cAAc,CAACE,OAAD,CAAd;AACH;;AAEDX,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIgB,IAAI,GAAGJ,YAAY,CAACK,OAAb,CAAqB,aAArB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,KAAL,CAAWJ,IAAX,CAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAER,WAAhC;AAAA,2BACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,MAAA,KAAK,EAAEE,wBAAtC;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IApBeD,e;;KAAAA,e","sourcesContent":["import React,{useContext,useState,useEffect} from 'react';\r\n\r\nconst AccountContext = React.createContext()\r\nconst AccountUpdateContext = React.createContext()\r\n\r\nexport function useAccountData(){\r\n    return useContext(AccountContext);\r\n}\r\n\r\nexport function useAccountDataUpdate(){\r\n    return useContext(AccountUpdateContext)\r\n}\r\n\r\nexport function AccountProvider({children}){\r\n    const [accountData,setAccountData] = useState({})\r\n\r\n    function changeAccountDataHandler(newData){\r\n        localStorage.setItem(\"loginStatus\",JSON.stringify(newData))\r\n        setAccountData(newData)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let data = localStorage.getItem(\"loginStatus\")\r\n        console.log(JSON.parse(data))\r\n    },[])\r\n\r\n    return(\r\n        <AccountContext.Provider value={accountData}>\r\n            <AccountUpdateContext.Provider value={changeAccountDataHandler}>\r\n                {children}\r\n            </AccountUpdateContext.Provider>\r\n        </AccountContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}