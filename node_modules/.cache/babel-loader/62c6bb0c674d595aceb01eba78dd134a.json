{"ast":null,"code":"export const popUpError = () => {\n  document.getElementById(\"account-error\").style.transform = \"scale(1.2)\";\n  setTimeout(() => {\n    document.getElementById(\"account-error\").style.transform = \"scale(1)\";\n  }, 500);\n};\nexport const validateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\nexport async function LoginRequest(obj) {\n  //    email,password\n  const response = await fetch(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`);\n  return await response.json();\n}\n_c = LoginRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRequest\");","map":{"version":3,"sources":["D:/react/remigoo/src/utils/utils.js"],"names":["popUpError","document","getElementById","style","transform","setTimeout","validateEmail","email","re","test","String","toLowerCase","LoginRequest","obj","response","fetch","password","json"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAK;AAC3BC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,SAA/C,GAAyD,YAAzD;AACAC,EAAAA,UAAU,CAAC,MAAI;AACXJ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,SAA/C,GAAyD,UAAzD;AACH,GAFS,EAER,GAFQ,CAAV;AAGH,CALM;AAOP,OAAO,MAAME,aAAa,GAAIC,KAAD,IAAU;AACnC,QAAMC,EAAE,GAAG,uJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACH,CAHM;AAKP,OAAO,eAAeC,YAAf,CAA4BC,GAA5B,EAAgC;AACnC;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mDAAkDF,GAAG,CAACN,KAAM,aAAYM,GAAG,CAACG,QAAS,EAAvF,CAA5B;AACA,SAAO,MAAMF,QAAQ,CAACG,IAAT,EAAb;AACH;KAJqBL,Y","sourcesContent":["export const popUpError = () =>{\r\n    document.getElementById(\"account-error\").style.transform=\"scale(1.2)\";\r\n    setTimeout(()=>{\r\n        document.getElementById(\"account-error\").style.transform=\"scale(1)\";\r\n    },500)\r\n}\r\n\r\nexport const validateEmail = (email)=> {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport async function LoginRequest(obj){\r\n    //    email,password\r\n    const response = await fetch(`http://localhost:3000/?type=login&email_address=${obj.email}&password=${obj.password}`)\r\n    return await response.json()\r\n}"]},"metadata":{},"sourceType":"module"}